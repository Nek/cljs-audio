{"version":3,"sources":["cljs_audio/modules.cljc"],"mappings":"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","names":["cljs-audio.modules/at-start","v","p__49213","map__49214","cljs.core/--destructure-map","cljs.core.get","cljs-audio.modules/delay-fx","time","gain","p__49221","map__49222","cljs-audio.modules/multi-tap-delay","dry","times","gains","cljs.core.mapv","delays","cljs.core.map_indexed","p__49223","vec__49225","cljs.core.nth","i","cljs.core.keyword","cljs.core/vector","cljs.core.apply","cljs.core/concat","cljs.core.repeat","delay-keys","cljs.core/keys","cljs.core.into","key","p__49235","map__49236","cljs-audio.modules/simple-voice","frequency","detune","type","p__49237","map__49238","cljs-audio.modules/kick","velocity","cljs-audio.envelopes/adsr","p__49243","map__49244","cljs-audio.modules/simple-voice-minus-gain","p__49255","map__49256","cljs-audio.modules/simple-voice-replace-gain","p__49260","map__49261","cljs-audio.modules/fx","p__49269","map__49270","cljs-audio.modules/vca","p__49274","map__49275","cljs-audio.modules/osc-bank","p__49276","map__49277","cljs-audio.modules/synth"],"sourcesContent":["(ns cljs-audio.modules\n  (:require [cljs-audio.envelopes :refer [adsr! adsr]]))\n\n(defn at-start [v] [:set-value-at-time v 0])\n\n(defn delay-fx [{:keys [time gain] :or {time 0.5 gain 1}}]\n  [{:delay [:delay {:delay-time time} [5]]\n    :vca   [:gain {:gain gain}]}\n   #{[:> :delay]\n     [:delay :vca]\n     [:vca :>]}])\n\n(defn multi-tap-delay [{:keys [dry times gains] :or {dry   1\n                                                     times (mapv at-start [1])\n                                                     gains (mapv at-start [1])}}]\n  (let [delays (map-indexed\n                 (fn [i [time gain]] [(keyword (str i))\n                                      (delay-fx {:time time :gain gain})])\n                 (mapv vector times (apply concat\n                                           (repeat gains))))\n        delay-keys (keys (into {} delays))]\n    [(into {:dry [:gain []]} delays)\n     (into (into #{[:> :dry]\n                   [:dry :>]} (mapv (fn [key] [:> key]) delay-keys))\n           (mapv (fn [key] [key :>]) delay-keys))]))\n\n(defn simple-voice [{:keys [frequency detune type gain]\n                     :or   {frequency 220 detune 0 type \"triangle\" gain 1}}]\n  [{:osc [:oscillator {:frequency frequency\n                       :detune    detune\n                       :type      type} [1 2]]\n    :vca [:gain {:gain gain}]}\n   #{[:osc :vca]\n     [:vca :>]}])\n\n(defn kick [{:keys [velocity time]\n             :or   {velocity 1 time 0}}]\n  [{:osc [:oscillator {:frequency 110\n                       :type      \"sine\"}]\n    :vca [:gain {:gain (adsr 0.01 0.1 0.8 0.1 0.05 velocity time)}]}\n   #{[:osc :vca]\n     [:vca :>]}])\n\n(defn simple-voice-minus-gain [{:keys [frequency detune type gain]\n                                :or   {frequency 220 detune 0 type \"triangle\" gain 1}}]\n  [{:osc [:oscillator {:frequency frequency\n                       :detune    detune\n                       :type      type} [1 2]]}\n   #{[:osc :>]}])\n\n(defn simple-voice-replace-gain [{:keys [frequency detune type gain]\n                                  :or   {frequency 220 detune 0 type \"triangle\" gain 1}}]\n  [{:osc  [:oscillator {:frequency frequency\n                        :detune    detune\n                        :type      type} [1 2]]\n    :osc2 [:oscillator {:frequency frequency\n                        :detune    detune\n                        :type      type} [1]]}\n   #{[:osc :>]\n     [:osc2 :osc]}])\n\n\n(defn fx [{:keys [time] :or {time 0.5}}]\n  [{:io [:delay {:time time} [5]]} {:io :>\n                                    :>  :io}])\n\n\n(defn vca [{:keys [gain] :or {gain 1}}]\n  [{:io [:gain {:gain gain}]}\n   #{[:io :>]\n     [:> :io]}])\n\n(defn osc-bank [{:keys [frequency gain] :or {frequency 220 gain 1}}]\n  [{:1   [:oscillator {:frequency frequency :type \"sine\"}]\n    :2   [:oscillator {:frequency frequency :type \"triangle\"}]\n    :3   [:oscillator {:frequency frequency :type \"square\"}]\n    :mix [:gain {}]\n    :vca (vca {:gain gain})}\n   #{[:1 :mix]\n     [:2 :mix]\n     [:3 :mix]\n     [:mix :vca]\n     [:vca :>]}])\n\n(defn synth [{:keys [frequency] :or {frequency 220}}]\n  [{:voice1 (simple-voice {:frequency frequency})\n    :voice2 (simple-voice {:frequency frequency})\n    :vca    [:gain {}]}\n   #{[:voice1 :vca]\n     [:voice2 :vca]\n     [:vca :>]}])\n\n\n"]}